function[kinematic_params] = getKinematicParams(dataset,events_tbl)
    conditions = fieldnames(dataset);
    n_cond = length(conditions);

    for i=1:n_cond
        % get data from current condition
        data = dataset.(conditions{i});
        current_events = events_tbl.(conditions{i});
        event_types = fieldnames(current_events);
        % estimate joint angles
        L_HIP_KNE = data.LKNE - data.LHIP;
        L_KNE_ANK = data.LHIP - data.LANK;
        L_ANK_TOE = data.LANK - data.LTOE;
    
    
        R_HIP_KNE = data.RKNE - data.RHIP;
        R_KNE_ANK = data.RHIP - data.RANK;
        R_ANK_TOE = data.RANK - data.RTOE;
    
        L_hip_angle = [];
        R_hip_angle = [];
        L_knee_angle = [];
        R_knee_angle = [];
        L_foot_angle = [];
        R_foot_angle = [];


        for j=1:length(L_HIP_KNE)
            L_hip_angle = [L_hip_angle; rad2deg(subspace(L_HIP_KNE(j,:,1).',[0,0,1].'))];
            R_hip_angle = [R_hip_angle; rad2deg(subspace(R_HIP_KNE(j,:,1).',[0,0,1].'))];
            L_knee_angle = [L_knee_angle; rad2deg(subspace(L_HIP_KNE(j,:,1).',L_KNE_ANK(j,:,1).'))];
            L_foot_angle = [L_foot_angle; rad2deg(subspace(L_KNE_ANK(j,:,1).',L_ANK_TOE(j,:,1).'))];
            R_knee_angle = [R_knee_angle; rad2deg(subspace(R_HIP_KNE(j,:,1).',R_KNE_ANK(j,:,1).'))];
            R_foot_angle = [R_foot_angle; rad2deg(subspace(R_KNE_ANK(j,:,1).',R_ANK_TOE(j,:,1).'))];   
        end
        
        % obtain gait cycle segmentation

        L_events = current_events.L_events;
        R_events = current_events.R_events;

        if height(L_events.idx) < height(R_events.idx)
            ref_events = L_events;
            min_length = height(L_events.idx) - 1;
        else
            ref_events = R_events;
            min_length = height(R_events.idx) - 1;
        end
        
        % Get timing information
        kinematic_tbl = table();
        gait_dur = diff(ref_events.time);
        kinematic_tbl.gait_dur = gait_dur(:,1);
        r_stance_swing = diff(sort(reshape(R_events.time,2*height(R_events.time),1)));
        l_stance_swing = diff(sort(reshape(L_events.time,2*height(L_events.time),1)));
        kinematic_tbl.r_stance_dur = r_stance_swing(1:2:min_length*2);
        kinematic_tbl.r_swing_dur = r_stance_swing(2:2:min_length*2);
        kinematic_tbl.l_stance_dur = l_stance_swing(1:2:min_length*2);
        kinematic_tbl.l_swing_dur = l_stance_swing(2:2:min_length*2);

        % Get joint angle information
        max_hip_angl = double.empty(min_length,0);
        max_knee_angl = double.empty(min_length,0);
        max_foot_angl = double.empty(min_length,0);

        events_idx = ref_events.idx;
        
        for k=1:min_length
            max_hip_angl(k,1) = max(L_hip_angle(events_idx(k,1):events_idx(k+1,1)));
            max_hip_angl(k,2) = max(R_hip_angle(events_idx(k,1):events_idx(k+1,1)));
            max_knee_angl(k,1) = max(L_knee_angle(events_idx(k,1):events_idx(k+1,1)));
            max_knee_angl(k,2) = max(R_knee_angle(events_idx(k,1):events_idx(k+1,1)));

        end


    end
end